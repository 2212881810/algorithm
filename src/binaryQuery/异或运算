1. 认识异或运算
异或运算(^)： 相同为0，不同为1  【无进位相加】
同或运算(&)： 相同为1，不同为0


6 ^ 7 = 1

  110
^ 111
-------
  001


===================
异或运算的性质：
1， 0^N == N , N^N ==0
2, 异或运算满足交换律和结合率 【同一批数的异或结果一定是一样的】


题目1:如何不用额外变量就交换两个数的值
    int a = 甲， int b = 乙

    int a = a ^ b   |||   a = 甲 ^ 乙， b  = 乙
    int b = a ^ b   |||   b = 甲 ^ 乙 ^ 乙  => b = 甲 ^ 0 = 甲, 即是b = 甲  ，  a =  甲 ^ 乙
    int a = a ^ b   |||   a = 甲 ^ 乙  ^ 甲 => a = 0 ^ 乙 = 乙， b 不变，还是甲

注意： a,b 必须不是同一块内存。


题目2：一个数组中有一种数出现了奇数次， 其他数都出现了偶数次，怎么找到并打印这种数
答案：binaryQuery.OddEor.java

题目3： 怎么把一个int类型的数，提取出最右侧的1来

int a = N, 转成二进制
a的二进制： 0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0  # 提取出最右侧的1

最后结果：  0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0


答案： N & ((~N)+1)  【N与上N取反+1】 【& 如果两数都是1则为1 ，否则为0】

N  :  0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0
~N :  1 1 1 0 1 0 1 0 1 0 1 0 1 1 1 1
~N=1: 1 1 1 0 1 0 1 0 1 0 1 1 0 0 0 0

N & (~N+ 1) :
   0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0
 & 1 1 1 0 1 0 1 0 1 0 1 1 0 0 0 0
 --------------------------------------
   0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0


题目4：一个数组中有两种数出现了奇数次， 其它都出现偶数次，怎么找到并打印这两种数


